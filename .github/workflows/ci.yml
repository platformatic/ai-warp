---
name: Run Tests
on: [push, pull_request, workflow_dispatch]
jobs:
  setup:
    strategy:
      matrix:
        node-version: [22, 24]
        os: [ubuntu-latest]
    runs-on: ${{matrix.os}}
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use supported Node.js Version
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Restore cached dependencies
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: node-modules-${{ hashFiles('package.json') }}
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

  ai-client:
    needs: setup
    strategy:
      matrix:
        node-version: [22, 24]
        os: [ubuntu-latest]
    runs-on: ${{matrix.os}}
    timeout-minutes: 20
    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use supported Node.js Version
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile
      - name: Build Packages
        run: pnpm -r build
      - name: Run Tests
        run: cd packages/ai-client && pnpm run ci
        env:
          REDIS_URL: redis://localhost:6379
          VALKEY_URL: redis://localhost:6380

  ai-provider:
    needs: setup
    strategy:
      matrix:
        node-version: [22, 24]
        os: [ubuntu-latest]
    runs-on: ${{matrix.os}}
    timeout-minutes: 20
    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use supported Node.js Version
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile
      - name: Build Packages
        run: pnpm -r build
      - name: Run Tests
        run: cd packages/ai-provider && pnpm run ci
        env:
          REDIS_URL: redis://localhost:6379
          VALKEY_URL: redis://localhost:6380

  ai-warp:
    needs: setup
    strategy:
      matrix:
        node-version: [22, 24]
        os: [ubuntu-latest]
    runs-on: ${{matrix.os}}
    timeout-minutes: 20
    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use supported Node.js Version
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile
      - name: Build Packages
        run: pnpm -r build
      - name: Run Tests
        run: cd packages/ai-warp && pnpm run ci
        env:
          REDIS_URL: redis://localhost:6379
          VALKEY_URL: redis://localhost:6380

  fastify-ai:
    needs: setup
    strategy:
      matrix:
        node-version: [22, 24]
        os: [ubuntu-latest]
    runs-on: ${{matrix.os}}
    timeout-minutes: 20
    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use supported Node.js Version
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile
      - name: Build Packages
        run: pnpm -r build
      - name: Run Tests
        run: cd packages/fastify-ai && pnpm run ci
        env:
          REDIS_URL: redis://localhost:6379
          VALKEY_URL: redis://localhost:6380
